version: "3.7"

services:
  ##########################################################################
  ######                     DATABASE SERVICE                        #######
  ##########################################################################
  postgres:
    image: postgres:15.0
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: store_monitor
    ports:
      - "5432:5432"
    volumes:
      - ./volumes/database:/var/lib/postgresql/data
      - ./migrations/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - store_monitor

  ##########################################################################
  ######                     TASK SERVICE                        #######
  ##########################################################################
  redis:
    image: redis:6.2.6
    ports:
      - "6379:6379"
    command: redis-server --appendonly yes --requirepass redis
    volumes:
      - ./volumes/redis:/data
    networks:
      - store_monitor

  celery:
    build:
      context: .
      dockerfile: Dockerfile.dev
    env_file:
      - .env
    volumes:
      - .:/app
    command: poetry run celery -A app.worker worker -l info
    depends_on:
      - redis
    networks:
      - store_monitor

  ########################################################################
  ####                     APP SERVICE                        #######
  #######################################################################
  store-monitor-api:
    ports:
      - 8000:8000
    build:
      context: .
      dockerfile: Dockerfile.dev
    command: >
      /bin/sh -c "
      poetry run uvicorn app.main:fastapiApp --reload --host 0.0.0.0;
      "
    volumes:
      - .:/app
    env_file:
      - .env
    depends_on:
      - redis
    networks:
      - store_monitor

  ########################################################################
  ####                     BUCKET SERVICE                        #######
  #######################################################################
  minio:
    image: minio/minio:latest
    ports:
      - "9000:9000"
      - "9001:9001"
    environment:
      MINIO_ROOT_USER: minio
      MINIO_ROOT_PASSWORD: password
    volumes:
      - ./volumes/minio/data:/export
      - ./volumes/minio/config:/root/.minio
    command: server --console-address :9001 /export
    networks:
      - store_monitor

  createbuckets:
    image: minio/mc:latest
    depends_on:
      - minio
    entrypoint: >
      /bin/sh -c "
      apk add --no-cache bash;
      /usr/bin/mc config host add myminio http://minio:9000 minio password;
      /usr/bin/mc mb myminio/storemonitor;
      /usr/bin/mc anonymous set public myminio/storemonitor;
      exit 0;
      "
    networks:
      - store_monitor

networks:
  store_monitor:
